{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.5295182f1a01ac614688.hot-update.js","sources":["webpack:///./pages/projects.js"],"sourcesContent":["import {Component} from 'react';\r\nimport Layout from '../components/MyLayout.js';\r\nimport ComingSoon from '../components/comingSoon';\r\nimport Card from '../components/card';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport Pagination from 'react-paginating';\r\n\r\nimport '../sass/main.scss';\r\n\r\nconst fruits = [\r\n  ['apple', 'orange'],\r\n  ['banana', 'avocado'],\r\n  ['coconut', 'blueberry'],\r\n  ['payaya', 'peach'],\r\n  ['pear', 'plum']\r\n];\r\nconst limit = 1;\r\nconst pageCount = 3;\r\nconst total = fruits.length * limit;\r\n\r\nclass works extends Component {\r\n  state = {\r\n    currentPage : 1\r\n  }\r\n  handlePageChange = page => {\r\n    this.setState({\r\n      currentPage: page\r\n    });\r\n  };\r\n  render(){\r\n    const { currentPage } = this.state;\r\n    return (\r\n      <Layout title={'Works'}>\r\n          {/* <ComingSoon color={this.props.bodyColor}/> */}\r\n            {/* <div className=\"container project-section\">\r\n              <div className=\"row\" style={{justifyContent: 'center'}}>\r\n                  <Card />\r\n                  <Card />          \r\n                  <Card />\r\n              </div>\r\n            </div> */}\r\n        <ul>\r\n          {fruits[currentPage - 1].map(item => <li key={item}>{item}</li>)}\r\n        </ul>\r\n        <Pagination\r\n          total={total}\r\n          limit={limit}\r\n          pageCount={pageCount}\r\n          currentPage={currentPage}\r\n        >\r\n          {({\r\n            pages,\r\n            currentPage,\r\n            hasNextPage,\r\n            hasPreviousPage,\r\n            previousPage,\r\n            nextPage,\r\n            totalPages,\r\n            getPageItemProps\r\n          }) => (\r\n            <div>\r\n              <button\r\n                {...getPageItemProps({\r\n                  pageValue: 1,\r\n                  onPageChange: this.handlePageChange\r\n                })}\r\n              >\r\n                first\r\n              </button>\r\n\r\n              {hasPreviousPage && (\r\n                <button\r\n                  {...getPageItemProps({\r\n                    pageValue: previousPage,\r\n                    onPageChange: this.handlePageChange\r\n                  })}\r\n                >\r\n                  {'<'}\r\n                </button>\r\n              )}\r\n\r\n              {pages.map(page => {\r\n                let activePage = null;\r\n                if (currentPage === page) {\r\n                  activePage = { backgroundColor: '#fdce09' };\r\n                }\r\n                return (\r\n                  <button\r\n                    key={page}\r\n                    style={activePage}\r\n                    {...getPageItemProps({\r\n                      pageValue: page,\r\n                      onPageChange: this.handlePageChange\r\n                    })}\r\n                  >\r\n                    {page}\r\n                  </button>\r\n                );\r\n              })}\r\n\r\n              {hasNextPage && (\r\n                <button\r\n                  {...getPageItemProps({\r\n                    pageValue: nextPage,\r\n                    onPageChange: this.handlePageChange\r\n                  })}\r\n                >\r\n                  {'>'}\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                {...getPageItemProps({\r\n                  pageValue: totalPages,\r\n                  onPageChange: this.handlePageChange\r\n                })}\r\n              >\r\n                last\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Pagination>\r\n      </Layout>\r\n    )}\r\n}\r\n\r\nconst mapPropsToState = state => {\r\n  return{\r\n    bodyColor:state.bodyColor\r\n  }\r\n}\r\n\r\nexport default connect(mapPropsToState)(works)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAOA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;;;;;;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAUA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAFA;AAWA;AACA;AAFA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAQA;AAKA;AACA;AAFA;AAWA;AACA;AAFA;AA9DA;AAyEA;;;;AAvGA;AACA;AAyGA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}