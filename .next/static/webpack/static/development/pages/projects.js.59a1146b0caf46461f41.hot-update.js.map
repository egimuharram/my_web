{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.59a1146b0caf46461f41.hot-update.js","sources":["webpack:///./node_modules/isomorphic-unfetch/browser.js","webpack:///./node_modules/isomorphic-unfetch/node_modules/unfetch/dist/unfetch.es.js","webpack:///./pages/projects.js"],"sourcesContent":["module.exports = window.fetch || (window.fetch = require('unfetch').default || require('unfetch'));\r\n","var index = typeof fetch=='function' ? fetch.bind() : function(url, options) {\r\n\toptions = options || {};\r\n\treturn new Promise( function (resolve, reject) {\r\n\t\tvar request = new XMLHttpRequest();\r\n\r\n\t\trequest.open(options.method || 'get', url, true);\r\n\r\n\t\tfor (var i in options.headers) {\r\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\r\n\t\t}\r\n\r\n\t\trequest.withCredentials = options.credentials=='include';\r\n\r\n\t\trequest.onload = function () {\r\n\t\t\tresolve(response());\r\n\t\t};\r\n\r\n\t\trequest.onerror = reject;\r\n\r\n\t\trequest.send(options.body || null);\r\n\r\n\t\tfunction response() {\r\n\t\t\tvar keys = [],\r\n\t\t\t\tall = [],\r\n\t\t\t\theaders = {},\r\n\t\t\t\theader;\r\n\r\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function (m, key, value) {\r\n\t\t\t\tkeys.push(key = key.toLowerCase());\r\n\t\t\t\tall.push([key, value]);\r\n\t\t\t\theader = headers[key];\r\n\t\t\t\theaders[key] = header ? (header + \",\" + value) : value;\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\r\n\t\t\t\tstatus: request.status,\r\n\t\t\t\tstatusText: request.statusText,\r\n\t\t\t\turl: request.responseURL,\r\n\t\t\t\tclone: response,\r\n\t\t\t\ttext: function () { return Promise.resolve(request.responseText); },\r\n\t\t\t\tjson: function () { return Promise.resolve(request.responseText).then(JSON.parse); },\r\n\t\t\t\tblob: function () { return Promise.resolve(new Blob([request.response])); },\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tkeys: function () { return keys; },\r\n\t\t\t\t\tentries: function () { return all; },\r\n\t\t\t\t\tget: function (n) { return headers[n.toLowerCase()]; },\r\n\t\t\t\t\thas: function (n) { return n.toLowerCase() in headers; }\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default index;\r\n//# sourceMappingURL=unfetch.es.js.map\r\n","import Layout from '../components/MyLayout.js';\r\nimport ComingSoon from '../components/comingSoon';\r\nimport Card from '../components/card';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n// redux\r\nimport {connect} from 'react-redux';\r\n// css\r\nimport '../sass/main.scss';\r\n\r\nconst works = props => {\r\n  return (\r\n    <Layout title={'Works'}>\r\n        {/* <ComingSoon color={props.bodyColor}/> */}\r\n        <div className=\"container project-section\">\r\n          <div className=\"row justify-content-center\">\r\n            <Card />\r\n            <Card />\r\n            <Card />\r\n          </div>\r\n        </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nworks.getInitialProps = async function () {\r\n  const res = await fetch('http://localhost:3001/api/projects')\r\n  const data = await res.json()\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`)\r\n\r\n  return {\r\n      shows: data\r\n  }\r\n}\r\n\r\nconst mapPropsToState = state => {\r\n  return{\r\n    bodyColor:state.bodyColor\r\n  }\r\n}\r\n\r\nexport default connect(mapPropsToState)(works)\r\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAEA;AAJA;AAOA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}